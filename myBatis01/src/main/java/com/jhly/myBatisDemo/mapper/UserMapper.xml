<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace:-->
<mapper namespace="com.jhly.myBatisDemo.mapper">
    <!--    id:方法名
            parameterType:定义参数类型
            resultType:返回值类型
            如果返回值类型是list,在resultType写list的泛型-->
    <select id="selectAll" resultType="com.jhly.myBatisDemo.model.User">
    select * from USER
</select>
    <!--    parameterType控制参数类型
            #{}接收参数-->
    <!--    #{}和${}的区别：
            #{}获取参数内容 支持索引获取 param1获取指定位置参数 并且SQL使用？占位符
            ${}字符串拼接不使用？默认找${}内容的get/set方法，如果写数字就取数字的值-->
    <select id="selectById" resultType="com.jhly.myBatisDemo.model.User" parameterType="int">
        select * from USER where id = #{id}
    </select>
    <!--    如果参数是对象用#{属性}
            如果参数是map用${key}-->
    <select id="selectByIdAndName" resultType="com.jhly.myBatisDemo.model.User" parameterType="user">
        select * from USER where id = #{id} and uname = #{uname}
    </select>
    <!--    分页查询-->
    <!--    关键字‘,’前后不允许占位符进行数学运算-->
    <!--    这里使用了user类的别名，在mybatis中设置-->
    <select id="page" resultType="user" parameterType="map">
        select * from USER limit #{pageStart},#{pageSize}
    </select>
<!--    <insert><update><delete>标签没有resultType默认为int-->
    <insert id="add" parameterType="user">
        insert into user (uname,upass,age,remark,createDate) values (#{uname},#{upass},#{age},#{remark},#{createDate});
    </insert>
</mapper>

